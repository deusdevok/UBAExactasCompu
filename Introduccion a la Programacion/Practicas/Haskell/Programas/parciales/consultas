Hice una implementacion de masRepetido, pero no me convence. Como se puede hacer mas claro?

La funcion valoresDeCamino, no se entiende la especificacion

Se pueden usar list comprehensions? Por ejemplo, si quisiera ordenar una lista, puedo usar quicksort asi? NO SE PUEDE EN ESTE EXAMEN

Esta implementacion no se podria hacer en este examen:

quicksort :: (Ord a) => [a] -> [a]
quicksort [] = []
-- quicksort (x:xs) = quicksort [a | a <- xs, a <= x] ++ [x] ++ quicksort [a | a <- xs, a > x]
quicksort (x:xs) =
    let smallerSorted = quicksort [a | a <- xs, a <= x]
        biggerSorted = quicksort [a | a <- xs, a > x]
    in smallerSorted ++ [x] ++ biggerSorted
    -- in biggerSorted ++ [x] ++ smallerSorted -- Para ordenar de mayor a menor

Cuando trabajamos con numeros pares, que pasa con los negativos? Un negativo se puede considerar par? SI, los negativos tambien son pares (por definicion)

Alcanza con usar Int? O por las dudas uso Integer? Pregunto porque quizas haya algun caso de prueba con enteros grandes y el Int no lo soportaria. SI, alcanza con INT en principio.

1 es un numero Primo? Creo que no. NO, el 1 no es primo, por definicion (empieza de 2, o los mayores que 1): https://es.wikipedia.org/wiki/N%C3%BAmero_primo

Cuando me dan algo como esto: problema materiasTurnoTarde (s: seq⟨String x String x Z x Z⟩) :seq⟨String⟩, puedo definir mis types de otra forma para mayor claridad? O eso lo hago solo si me lo aclara el problema? En principio, si, puedo hacerlo, pero el profe no me lo recomendo para el examen. Dijo que por las dudas que use types nativos.

Cuando defino types, siempre tienen que empezar con mayuscula, no? Creo que si

No entiendo estos requiere. Hace falta aclarar uno Y el otro? En que se diferencian?
asegura: { res contiene los nombre de todas las materias incluídas en s tales el horario de cursada de dichas materias se superpone (total o parcialmente) con el rango (14..17)}

asegura: { res contiene solamente los nombre las materias incluídas en s tales el horario de cursada de dichas materias se superpone (total o parcialmente) con el rango (14..17)}

Esto de los requiere lo explico mas en clase. Basicamente lo que dice es que en el array de salida no hay elementos de mas, pero tampoco hay elementos de menos.


Es correcta la opcion marcada? Yo hubiera marcado la ultima. (la respuesta marcada es de la solucion que encontre online)
Conteste marcando la opción correcta.
Dado un problema con parámetros x e y, cuya precondición es (x>0 ∨ esPar(y)):
[ ] Todos los casos de test deben tener inputs que cumplan x>0 ∧ esPar(y)
[X] Independientemente de la precondición, debo testear todas las combinaciones de valores x e y
[ ] No tiene sentido tener un caso de test con x=0, y=1

No, la correcta es la ultima